/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MultiSigWallet,
  MultiSigWalletInterface,
} from "../MultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_signaturesRequired",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_txNonce",
        type: "uint256",
      },
    ],
    name: "Sign",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "txNonce",
        type: "uint256",
      },
    ],
    name: "Submit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_txNonce",
        type: "uint256",
      },
    ],
    name: "transactionExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "OwnersCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredSignatures",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "signTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transaction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "confirmations",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "signature",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "txMap",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "confirmations",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "signature",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010b3380380620010b3833981810160405281019062000037919062000367565b60008251116200007e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007590620004cb565b60405180910390fd5b60008111801562000090575081518111155b620000d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c990620004a9565b60405180910390fd5b60005b8251811015620002875760008382815181106200011b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620001b5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ac9062000487565b60405180910390fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080806200027e906200059f565b915050620000d5565b508060068190555050506200067f565b6000620002ae620002a88462000521565b620004ed565b90508083825260208201905082856020860282011115620002ce57600080fd5b60005b85811015620003025781620002e788826200030c565b845260208401935060208301925050600181019050620002d1565b5050509392505050565b6000815190506200031d816200064b565b92915050565b600082601f8301126200033557600080fd5b81516200034784826020860162000297565b91505092915050565b600081519050620003618162000665565b92915050565b600080604083850312156200037b57600080fd5b600083015167ffffffffffffffff8111156200039657600080fd5b620003a48582860162000323565b9250506020620003b78582860162000350565b9150509250929050565b6000620003d060108362000550565b91507f4f776e6572206e6f7420756e69717565000000000000000000000000000000006000830152602082019050919050565b60006200041260208362000550565b91507f496e76616c69642c2064756520746f206e756d626572206f66206f776e6572736000830152602082019050919050565b60006200045460118362000550565b91507f4e6f7420656e6f756768206f776e6572730000000000000000000000000000006000830152602082019050919050565b60006020820190508181036000830152620004a281620003c1565b9050919050565b60006020820190508181036000830152620004c48162000403565b9050919050565b60006020820190508181036000830152620004e68162000445565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200051757620005166200061c565b5b8060405250919050565b600067ffffffffffffffff8211156200053f576200053e6200061c565b5b602082029050602081019050919050565b600082825260208201905092915050565b60006200056e8262000575565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620005ac8262000595565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620005e257620005e1620005ed565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620006568162000561565b81146200066257600080fd5b50565b620006708162000595565b81146200067c57600080fd5b50565b610a24806200068f6000396000f3fe6080604052600436106100745760003560e01c8063790a4d081161004e578063790a4d08146101485780638d06804314610188578063c99de57e146101b3578063ee22610b146101e1576100b4565b8063203dd666146100b95780633c5311e6146100e25780635d9ec2101461011f576100b4565b366100b4577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c33346040516100aa9291906107fe565b60405180910390a1005b600080fd5b3480156100c557600080fd5b506100e060048036038101906100db91906106ec565b61020a565b005b3480156100ee57600080fd5b50610109600480360381019061010491906106c3565b6103a4565b604051610116919061086c565b60405180910390f35b34801561012b57600080fd5b5061014660048036038101906101419190610728565b6103c4565b005b34801561015457600080fd5b5061016f600480360381019061016a9190610728565b6104d5565b60405161017f9493929190610827565b60405180910390f35b34801561019457600080fd5b5061019d610545565b6040516101aa91906108c7565b60405180910390f35b3480156101bf57600080fd5b506101c861054b565b6040516101d89493929190610827565b60405180910390f35b3480156101ed57600080fd5b5061020860048036038101906102039190610728565b6105a9565b005b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d906108a7565b60405180910390fd5b60405180608001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001600181526020013373ffffffffffffffffffffffffffffffffffffffff168152506000808201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600760006008548152602001908152602001600020505050565b60056020528060005260406000206000915054906101000a900460ff1681565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610450576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610447906108a7565b60405180910390fd5b80600854811115610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90610887565b60405180910390fd5b60085491506000600760006008548152602001908152602001600020905060018160020160008282546104c991906108f3565b92505081905550505050565b60076020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60065481565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c906108a7565b60405180910390fd5b8060085481111561067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290610887565b60405180910390fd5b60006007600060085481526020019081526020016000209050505050565b6000813590506106a8816109c0565b92915050565b6000813590506106bd816109d7565b92915050565b6000602082840312156106d557600080fd5b60006106e384828501610699565b91505092915050565b600080604083850312156106ff57600080fd5b600061070d85828601610699565b925050602061071e858286016106ae565b9150509250929050565b60006020828403121561073a57600080fd5b6000610748848285016106ae565b91505092915050565b61075a81610949565b82525050565b6107698161095b565b82525050565b600061077c6010836108e2565b91507f547820646f65736e2774206578697374000000000000000000000000000000006000830152602082019050919050565b60006107bc6009836108e2565b91507f4e6f74206f776e657200000000000000000000000000000000000000000000006000830152602082019050919050565b6107f881610987565b82525050565b60006040820190506108136000830185610751565b61082060208301846107ef565b9392505050565b600060808201905061083c6000830187610751565b61084960208301866107ef565b61085660408301856107ef565b6108636060830184610751565b95945050505050565b60006020820190506108816000830184610760565b92915050565b600060208201905081810360008301526108a08161076f565b9050919050565b600060208201905081810360008301526108c0816107af565b9050919050565b60006020820190506108dc60008301846107ef565b92915050565b600082825260208201905092915050565b60006108fe82610987565b915061090983610987565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561093e5761093d610991565b5b828201905092915050565b600061095482610967565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6109c981610949565b81146109d457600080fd5b50565b6109e081610987565b81146109eb57600080fd5b5056fea2646970667358221220ac89f16227d72b51a8cae3af22a598ca6fcf98df9498b75829e9c393e565869364736f6c63430008000033";

type MultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigWallet__factory extends ContractFactory {
  constructor(...args: MultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owners: PromiseOrValue<string>[],
    _signaturesRequired: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigWallet> {
    return super.deploy(
      _owners,
      _signaturesRequired,
      overrides || {}
    ) as Promise<MultiSigWallet>;
  }
  override getDeployTransaction(
    _owners: PromiseOrValue<string>[],
    _signaturesRequired: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owners,
      _signaturesRequired,
      overrides || {}
    );
  }
  override attach(address: string): MultiSigWallet {
    return super.attach(address) as MultiSigWallet;
  }
  override connect(signer: Signer): MultiSigWallet__factory {
    return super.connect(signer) as MultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigWalletInterface {
    return new utils.Interface(_abi) as MultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigWallet {
    return new Contract(address, _abi, signerOrProvider) as MultiSigWallet;
  }
}

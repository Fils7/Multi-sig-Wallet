/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MultiSigWallet,
  MultiSigWalletInterface,
} from "../MultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_signaturesRequired",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_txNonce",
        type: "uint256",
      },
    ],
    name: "Sign",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "txNonce",
        type: "uint256",
      },
    ],
    name: "Submit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_txNonce",
        type: "uint256",
      },
    ],
    name: "transactionExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "OwnersCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredSignatures",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "signTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transaction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "confirmations",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "signature",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "txMap",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "confirmations",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "signature",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200137a3803806200137a833981810160405281019062000037919062000367565b60008251116200007e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007590620004cb565b60405180910390fd5b60008111801562000090575081518111155b620000d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c990620004a9565b60405180910390fd5b60005b8251811015620002875760008382815181106200011b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620001b5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ac9062000487565b60405180910390fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080806200027e906200059f565b915050620000d5565b508060068190555050506200067f565b6000620002ae620002a88462000521565b620004ed565b90508083825260208201905082856020860282011115620002ce57600080fd5b60005b85811015620003025781620002e788826200030c565b845260208401935060208301925050600181019050620002d1565b5050509392505050565b6000815190506200031d816200064b565b92915050565b600082601f8301126200033557600080fd5b81516200034784826020860162000297565b91505092915050565b600081519050620003618162000665565b92915050565b600080604083850312156200037b57600080fd5b600083015167ffffffffffffffff8111156200039657600080fd5b620003a48582860162000323565b9250506020620003b78582860162000350565b9150509250929050565b6000620003d060108362000550565b91507f4f776e6572206e6f7420756e69717565000000000000000000000000000000006000830152602082019050919050565b60006200041260208362000550565b91507f496e76616c69642c2064756520746f206e756d626572206f66206f776e6572736000830152602082019050919050565b60006200045460118362000550565b91507f4e6f7420656e6f756768206f776e6572730000000000000000000000000000006000830152602082019050919050565b60006020820190508181036000830152620004a281620003c1565b9050919050565b60006020820190508181036000830152620004c48162000403565b9050919050565b60006020820190508181036000830152620004e68162000445565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200051757620005166200061c565b5b8060405250919050565b600067ffffffffffffffff8211156200053f576200053e6200061c565b5b602082029050602081019050919050565b600082825260208201905092915050565b60006200056e8262000575565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620005ac8262000595565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620005e257620005e1620005ed565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620006568162000561565b81146200066257600080fd5b50565b620006708162000595565b81146200067c57600080fd5b50565b610ceb806200068f6000396000f3fe6080604052600436106100745760003560e01c8063790a4d081161004e578063790a4d08146101485780638d06804314610188578063c99de57e146101b3578063ee22610b146101e1576100b4565b8063203dd666146100b95780633c5311e6146100e25780635d9ec2101461011f576100b4565b366100b4577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c33346040516100aa929190610a7a565b60405180910390a1005b600080fd5b3480156100c557600080fd5b506100e060048036038101906100db91906108b9565b61020a565b005b3480156100ee57600080fd5b5061010960048036038101906101049190610890565b6103fc565b6040516101169190610ae8565b60405180910390f35b34801561012b57600080fd5b50610146600480360381019061014191906108f5565b61041c565b005b34801561015457600080fd5b5061016f600480360381019061016a91906108f5565b610584565b60405161017f9493929190610aa3565b60405180910390f35b34801561019457600080fd5b5061019d6105f4565b6040516101aa9190610b83565b60405180910390f35b3480156101bf57600080fd5b506101c86105fa565b6040516101d89493929190610aa3565b60405180910390f35b3480156101ed57600080fd5b50610208600480360381019061020391906108f5565b610658565b005b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d90610b63565b60405180910390fd5b60405180608001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001600181526020013373ffffffffffffffffffffffffffffffffffffffff168152506000808201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600860006009548152602001908152602001600020506001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60056020528060005260406000206000915054906101000a900460ff1681565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f90610b63565b60405180910390fd5b806009548111156104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590610b43565b60405180910390fd5b600954915060006008600060095481526020019081526020016000209050600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561056357600080fd5b60018160020160008282546105789190610bba565b92505081905550505050565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60065481565b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90610b63565b60405180910390fd5b8060095481111561072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072190610b43565b60405180910390fd5b600060086000600954815260200190815260200160002090506006548160020154101561078c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078390610b03565b60405180910390fd5b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682600101546040516107da90610a65565b60006040518083038185875af1925050503d8060008114610817576040519150601f19603f3d011682016040523d82523d6000602084013e61081c565b606091505b5050905080610860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085790610b23565b60405180910390fd5b50505050565b60008135905061087581610c87565b92915050565b60008135905061088a81610c9e565b92915050565b6000602082840312156108a257600080fd5b60006108b084828501610866565b91505092915050565b600080604083850312156108cc57600080fd5b60006108da85828601610866565b92505060206108eb8582860161087b565b9150509250929050565b60006020828403121561090757600080fd5b60006109158482850161087b565b91505092915050565b61092781610c10565b82525050565b61093681610c22565b82525050565b6000610949601583610ba9565b91507f4e6f7420656e6f756768207369676e61747572657300000000000000000000006000830152602082019050919050565b6000610989601483610ba9565b91507f5478206661696c656420746f20657865637574650000000000000000000000006000830152602082019050919050565b60006109c9601083610ba9565b91507f547820646f65736e2774206578697374000000000000000000000000000000006000830152602082019050919050565b6000610a09600983610ba9565b91507f4e6f74206f776e657200000000000000000000000000000000000000000000006000830152602082019050919050565b6000610a49600083610b9e565b9150600082019050919050565b610a5f81610c4e565b82525050565b6000610a7082610a3c565b9150819050919050565b6000604082019050610a8f600083018561091e565b610a9c6020830184610a56565b9392505050565b6000608082019050610ab8600083018761091e565b610ac56020830186610a56565b610ad26040830185610a56565b610adf606083018461091e565b95945050505050565b6000602082019050610afd600083018461092d565b92915050565b60006020820190508181036000830152610b1c8161093c565b9050919050565b60006020820190508181036000830152610b3c8161097c565b9050919050565b60006020820190508181036000830152610b5c816109bc565b9050919050565b60006020820190508181036000830152610b7c816109fc565b9050919050565b6000602082019050610b986000830184610a56565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610bc582610c4e565b9150610bd083610c4e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c0557610c04610c58565b5b828201905092915050565b6000610c1b82610c2e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610c9081610c10565b8114610c9b57600080fd5b50565b610ca781610c4e565b8114610cb257600080fd5b5056fea26469706673582212202d89d3f1a787f2aa0d9631eae8b0ce9290d3e0c000b752990eb2990e44a3af0e64736f6c63430008000033";

type MultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigWallet__factory extends ContractFactory {
  constructor(...args: MultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owners: PromiseOrValue<string>[],
    _signaturesRequired: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigWallet> {
    return super.deploy(
      _owners,
      _signaturesRequired,
      overrides || {}
    ) as Promise<MultiSigWallet>;
  }
  override getDeployTransaction(
    _owners: PromiseOrValue<string>[],
    _signaturesRequired: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owners,
      _signaturesRequired,
      overrides || {}
    );
  }
  override attach(address: string): MultiSigWallet {
    return super.attach(address) as MultiSigWallet;
  }
  override connect(signer: Signer): MultiSigWallet__factory {
    return super.connect(signer) as MultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigWalletInterface {
    return new utils.Interface(_abi) as MultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigWallet {
    return new Contract(address, _abi, signerOrProvider) as MultiSigWallet;
  }
}
